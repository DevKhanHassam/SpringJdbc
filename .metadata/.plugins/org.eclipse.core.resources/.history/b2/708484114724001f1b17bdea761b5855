package Dao;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import Dto.Student;

@Repository
public class DaoStudent extends Thread implements Dao {

	@Autowired
	JdbcTemplate jdbcTemplate;

	public int insert(Student obj)

	{

		String sql = "insert into studenttable (RollNo, StudentName, StudentAddress) values (?,?,?)";

		Object[] student = { obj.getRollNo(), obj.getStudentName(), obj.getStudentAddress() };

		int insert = jdbcTemplate.update(sql, student);

		System.out.println(insert + " row inserted");

		return insert;
	}

	public void insertAll(ArrayList<Student> student) {

		String sql = "Insert into studenttable (RollNo, StudentName, StudentAddress) values (?,?,?)";

		ArrayList<Object[]> args = new ArrayList<>();

		for (Student x : student) {
			Object[] studentdata = { x.getRollNo(), x.getStudentName(), x.getStudentAddress() };
			args.add(studentdata);
		}

		jdbcTemplate.batchUpdate(sql, args);

		System.out.println("BatchUpdate successfully done");
	}

	public void clearData() {

		String sql = "TRUNCATE TABLE studenttable";
		jdbcTemplate.update(sql);
		System.out.println("Data has been deleted");

	}

	public Boolean deleteById(int i) {

		String sql = "delete from studenttable where RollNo=?";
		int del = jdbcTemplate.update(sql, i);

		if (del == 1) {
			System.out.println(del + "row deleted");
			selectAll();
			return true;
		} else {
			System.out.println("Incorrect ID");
			return del == 1;
		}

	}

//	BeanPropertyRowMapper  if table column and Dto property name change then use Aliases=(select fname as first_name from customer)
	public Student selectById(int i) {

		try {
			String sql = "Select * from studenttable where RollNO=?";
			Student studentData = jdbcTemplate.queryForObject(sql, new BeanPropertyRowMapper<Student>(Student.class),
					i);

			System.out.println(studentData);
			return studentData;
		}

		catch (Exception e) {
			System.out.println("Invalid RollNo");
			return null;
		}
	}

//	BeanPropertyRowMapper if table column and Dto property name change then use Aliases=(select fname as first_name from customer)
	public void selectAll() {

		String sql = "Select * from studenttable";
		List<Student> studentData = jdbcTemplate.query(sql, new BeanPropertyRowMapper<Student>(Student.class));

		for (Student x : studentData) {
			System.out.println(x);
		}

	}

	public int updateNameById(int i, String name) {

		try {

				System.out.println("Old Record");
				
				if(selectById(i)==null)
				{
					System.out.println("Invalid RollNo");
					return 0;
				}
				else 
				{
					String sql = "update studenttable set StudentName= ? where RollNo = ?";
					int update = jdbcTemplate.update(sql, name, i);
					System.out.println(update + " Name updated");
			
					System.out.println("New Record");
					selectById(i);
					return update;
				}
			}

		catch (Exception e) {
			System.out.println(e);
			return 0;
		}

	}

}
